# Cursor Rules for Protectogram
goals:
  - Follow charter.md exactly.
  - Before creating/editing files, ALWAYS present:
    1) PLAN (what, why, where)
    2) DIFF/FILE LIST (full paths)
    3) TEST PLAN (unit/contract/integration)
  - Do not run commands or write files until I reply with “APPROVE & RUN Step X”.

style:
  - Be concise. Use Russian for UI strings.
  - Prefer FastAPI async patterns, SQLAlchemy 2.0 async, Aiogram 3.x, APScheduler 4.x, Telnyx Call Control.

constraints:
  - Migrations must not import app settings or load .env.
  - Read DB URL in alembic/env.py from:
      1) -x db_url=...
      2) ALEMBIC_DATABASE_URL
      3) sqlalchemy.url (fallback)
  - Use TIMESTAMP WITH TIME ZONE in DB (timezone=True); never strip tzinfo.
  - Tests:
      - Tier 1 (no concurrency): per-test connection + SAVEPOINT
      - Tier 2 (concurrent): isolated DB/schema; no SAVEPOINT
  - Scheduler disabled in tests unless a test enables it and shuts it down.

review_checklist:
  - PLAN/DIFF/TEST PLAN shown?
  - Russian UI respected?
  - Idempotency (Inbox/Outbox) enforced?
  - Async-only SQLAlchemy (no sync Session/TestClient)?
  - Alembic independent of app config?
  - Tests deterministic; no network calls; proper cleanup?

approval_phrase: "APPROVE & RUN"
