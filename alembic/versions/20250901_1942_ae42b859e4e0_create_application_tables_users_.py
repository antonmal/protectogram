"""Create application tables: users, guardians, user_guardians, panic_events, trips

Revision ID: ae42b859e4e0
Revises:
Create Date: 2025-09-01 19:42:16.820288

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "ae42b859e4e0"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "guardians",
        sa.Column(
            "telegram_user_id",
            sa.BigInteger(),
            nullable=True,
            comment="Telegram user ID for sending messages to guardian",
        ),
        sa.Column(
            "phone_number",
            sa.String(length=20),
            nullable=False,
            comment="Guardian phone number for SMS/call alerts",
        ),
        sa.Column(
            "name", sa.String(length=100), nullable=False, comment="Guardian full name"
        ),
        sa.Column(
            "gender",
            sa.Enum("MALE", "FEMALE", "OTHER", "PREFER_NOT_TO_SAY", name="gender"),
            nullable=False,
            comment="Guardian gender",
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_guardians_phone_number"), "guardians", ["phone_number"], unique=False
    )
    op.create_index(
        op.f("ix_guardians_telegram_user_id"),
        "guardians",
        ["telegram_user_id"],
        unique=True,
    )
    op.create_table(
        "users",
        sa.Column(
            "telegram_user_id",
            sa.BigInteger(),
            nullable=False,
            comment="Telegram user ID for bot integration",
        ),
        sa.Column(
            "phone_number",
            sa.String(length=20),
            nullable=False,
            comment="Phone number for SMS/call alerts",
        ),
        sa.Column(
            "gender",
            sa.Enum("MALE", "FEMALE", "OTHER", "PREFER_NOT_TO_SAY", name="gender"),
            nullable=False,
            comment="User gender",
        ),
        sa.Column(
            "language",
            sa.String(length=5),
            nullable=False,
            comment="User preferred language (ISO 639-1)",
        ),
        sa.Column(
            "timezone",
            sa.String(length=50),
            nullable=False,
            comment="User timezone (tz database name)",
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_users_phone_number"), "users", ["phone_number"], unique=False
    )
    op.create_index(
        op.f("ix_users_telegram_user_id"), "users", ["telegram_user_id"], unique=True
    )
    op.create_table(
        "panic_events",
        sa.Column(
            "user_id",
            sa.UUID(),
            nullable=False,
            comment="Reference to user who triggered panic",
        ),
        sa.Column(
            "triggered_at",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="When the panic button was triggered",
        ),
        sa.Column(
            "resolved_at",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="When the panic was resolved (if applicable)",
        ),
        sa.Column(
            "status",
            sa.Enum("ACTIVE", "RESOLVED", "FALSE_ALARM", name="panicstatus"),
            nullable=False,
            comment="Current status of panic event",
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_panic_events_status"), "panic_events", ["status"], unique=False
    )
    op.create_index(
        op.f("ix_panic_events_triggered_at"),
        "panic_events",
        ["triggered_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_panic_events_user_id"), "panic_events", ["user_id"], unique=False
    )
    op.create_table(
        "trips",
        sa.Column(
            "user_id",
            sa.UUID(),
            nullable=False,
            comment="Reference to user making the trip",
        ),
        sa.Column(
            "expected_arrival_time",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="Expected arrival time for the trip",
        ),
        sa.Column(
            "status",
            sa.Enum(
                "ACTIVE",
                "COMPLETED",
                "SUSPENDED",
                "OVERDUE",
                "CANCELLED",
                name="tripstatus",
            ),
            nullable=False,
            comment="Current status of the trip",
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_trips_expected_arrival_time"),
        "trips",
        ["expected_arrival_time"],
        unique=False,
    )
    op.create_index(op.f("ix_trips_status"), "trips", ["status"], unique=False)
    op.create_index(op.f("ix_trips_user_id"), "trips", ["user_id"], unique=False)
    op.create_table(
        "user_guardians",
        sa.Column("user_id", sa.UUID(), nullable=False, comment="Reference to user"),
        sa.Column(
            "guardian_id", sa.UUID(), nullable=False, comment="Reference to guardian"
        ),
        sa.Column(
            "priority_order",
            sa.Integer(),
            nullable=False,
            comment="Priority order for alert sequence (1 = first to contact)",
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["guardian_id"], ["guardians.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_user_guardians_guardian_id"),
        "user_guardians",
        ["guardian_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_guardians_user_id"), "user_guardians", ["user_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_user_guardians_user_id"), table_name="user_guardians")
    op.drop_index(op.f("ix_user_guardians_guardian_id"), table_name="user_guardians")
    op.drop_table("user_guardians")
    op.drop_index(op.f("ix_trips_user_id"), table_name="trips")
    op.drop_index(op.f("ix_trips_status"), table_name="trips")
    op.drop_index(op.f("ix_trips_expected_arrival_time"), table_name="trips")
    op.drop_table("trips")
    op.drop_index(op.f("ix_panic_events_user_id"), table_name="panic_events")
    op.drop_index(op.f("ix_panic_events_triggered_at"), table_name="panic_events")
    op.drop_index(op.f("ix_panic_events_status"), table_name="panic_events")
    op.drop_table("panic_events")
    op.drop_index(op.f("ix_users_telegram_user_id"), table_name="users")
    op.drop_index(op.f("ix_users_phone_number"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_guardians_telegram_user_id"), table_name="guardians")
    op.drop_index(op.f("ix_guardians_phone_number"), table_name="guardians")
    op.drop_table("guardians")
    # ### end Alembic commands ###
