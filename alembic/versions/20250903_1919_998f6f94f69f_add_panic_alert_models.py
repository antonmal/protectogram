"""Add panic alert models

Revision ID: 998f6f94f69f
Revises: 50f9239565ef
Create Date: 2025-09-03 19:19:21.977352

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "998f6f94f69f"
down_revision: Union[str, None] = "50f9239565ef"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "panic_alerts",
        sa.Column(
            "user_id",
            sa.UUID(),
            nullable=False,
            comment="User who triggered the panic alert",
        ),
        sa.Column(
            "status",
            sa.String(length=20),
            nullable=False,
            comment="Alert status: active, acknowledged, resolved",
        ),
        sa.Column(
            "location",
            sa.Text(),
            nullable=True,
            comment="User's location when alert was triggered",
        ),
        sa.Column(
            "message", sa.Text(), nullable=True, comment="Optional message from user"
        ),
        sa.Column(
            "acknowledged_at",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="When alert was acknowledged by guardian",
        ),
        sa.Column(
            "acknowledged_by",
            sa.UUID(),
            nullable=True,
            comment="Guardian who acknowledged the alert",
        ),
        sa.Column(
            "acknowledged_response",
            sa.String(length=10),
            nullable=True,
            comment="Guardian response: positive or negative",
        ),
        sa.Column(
            "cascade_timeout_at",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="When cascade notifications should timeout",
        ),
        sa.Column(
            "retry_count",
            sa.Integer(),
            nullable=False,
            comment="Number of manual retry attempts",
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["acknowledged_by"],
            ["guardians.id"],
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_panic_alerts_status"), "panic_alerts", ["status"], unique=False
    )
    op.create_index(
        op.f("ix_panic_alerts_user_id"), "panic_alerts", ["user_id"], unique=False
    )
    op.create_table(
        "panic_notification_attempts",
        sa.Column(
            "panic_alert_id",
            sa.UUID(),
            nullable=False,
            comment="Reference to panic alert",
        ),
        sa.Column(
            "guardian_id",
            sa.UUID(),
            nullable=False,
            comment="Guardian receiving notification",
        ),
        sa.Column(
            "method",
            sa.String(length=20),
            nullable=False,
            comment="Notification method: telegram, voice_call, sms",
        ),
        sa.Column(
            "provider_id",
            sa.String(length=100),
            nullable=True,
            comment="Provider-specific ID (Twilio SID, Telegram message ID)",
        ),
        sa.Column(
            "status",
            sa.String(length=20),
            nullable=False,
            comment="Attempt status: sent, delivered, failed, acknowledged_positive, acknowledged_negative",
        ),
        sa.Column(
            "response",
            sa.String(length=10),
            nullable=True,
            comment="DTMF response from guardian: 1 (positive), 9 (negative)",
        ),
        sa.Column(
            "error_message",
            sa.Text(),
            nullable=True,
            comment="Error details if attempt failed",
        ),
        sa.Column(
            "sent_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
            comment="When notification was sent",
        ),
        sa.Column(
            "responded_at",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="When guardian responded",
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["guardian_id"], ["guardians.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["panic_alert_id"], ["panic_alerts.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_panic_notification_attempts_guardian_id"),
        "panic_notification_attempts",
        ["guardian_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_panic_notification_attempts_panic_alert_id"),
        "panic_notification_attempts",
        ["panic_alert_id"],
        unique=False,
    )
    op.drop_index("ix_panic_events_status", table_name="panic_events")
    op.drop_index("ix_panic_events_triggered_at", table_name="panic_events")
    op.drop_index("ix_panic_events_user_id", table_name="panic_events")
    op.drop_table("panic_events")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "panic_events",
        sa.Column(
            "user_id",
            sa.UUID(),
            autoincrement=False,
            nullable=False,
            comment="Reference to user who triggered panic",
        ),
        sa.Column(
            "triggered_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
            comment="When the panic button was triggered",
        ),
        sa.Column(
            "resolved_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
            comment="When the panic was resolved (if applicable)",
        ),
        sa.Column(
            "status",
            postgresql.ENUM("ACTIVE", "RESOLVED", "FALSE_ALARM", name="panicstatus"),
            autoincrement=False,
            nullable=False,
            comment="Current status of panic event",
        ),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name="panic_events_user_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="panic_events_pkey"),
    )
    op.create_index(
        "ix_panic_events_user_id", "panic_events", ["user_id"], unique=False
    )
    op.create_index(
        "ix_panic_events_triggered_at", "panic_events", ["triggered_at"], unique=False
    )
    op.create_index("ix_panic_events_status", "panic_events", ["status"], unique=False)
    op.drop_index(
        op.f("ix_panic_notification_attempts_panic_alert_id"),
        table_name="panic_notification_attempts",
    )
    op.drop_index(
        op.f("ix_panic_notification_attempts_guardian_id"),
        table_name="panic_notification_attempts",
    )
    op.drop_table("panic_notification_attempts")
    op.drop_index(op.f("ix_panic_alerts_user_id"), table_name="panic_alerts")
    op.drop_index(op.f("ix_panic_alerts_status"), table_name="panic_alerts")
    op.drop_table("panic_alerts")
    # ### end Alembic commands ###
