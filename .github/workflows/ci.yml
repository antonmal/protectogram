name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache mypy
      uses: actions/cache@v3
      with:
        path: .mypy_cache
        key: ${{ runner.os }}-mypy-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-mypy-

    - name: Cache ruff
      uses: actions/cache@v3
      with:
        path: .ruff_cache
        key: ${{ runner.os }}-ruff-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-ruff-

    - name: Cache pytest
      uses: actions/cache@v3
      with:
        path: .pytest_cache
        key: ${{ runner.os }}-pytest-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pytest-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install -e .
        pip install -e ".[dev]"

    - name: Lint with ruff
      run: |
        ruff check .

    - name: Format check with ruff
      run: |
        ruff format --check .

    - name: Type check with mypy
      run: |
        mypy .

    - name: Security check with bandit
      run: |
        bandit -q -c bandit.yaml -r app

    - name: Run unit tests
      run: |
        pytest -q tests/unit --import-mode=importlib

    - name: Run contract tests
      run: |
        pytest -q tests/contract --import-mode=importlib || true

    - name: Build Docker image
      run: |
        docker build -t protectogram:ci .
